#!/usr/bin/env python

from Bio import SeqIO
import sys
import argparse
import os

parser = argparse.ArgumentParser('This script takes a multifasta file and reorders the sequences according to the headers provided. For version info, run `bit-version`.')

required = parser.add_argument_group('required arguments')

required.add_argument("-i", "--input-fasta", metavar = "<FILE>", help = "Original fasta file", action = "store", required = True)
required.add_argument("-w", "--wanted-sequence-order", metavar = "<FILE>", help = "Single-column file with headers in desired order", action = "store", dest = "ordered_headers", required = True)
parser.add_argument("-o", "--output-fasta", help = 'Reordered output fasta (default: "reordered.fasta")', default = "reordered.fasta")


if len(sys.argv)==1:
    parser.print_help(sys.stderr)
    sys.exit(0)

args = parser.parse_args()

ordered_seqs = open(args.ordered_headers, "r")

ordered_list = list(line.strip() for line in ordered_seqs)

fasta_dict = SeqIO.index(args.input_fasta, "fasta")

fasta_out = open(args.output_fasta, "wb")

for header in ordered_list:
    fasta_out.write(fasta_dict.get_raw(header))

ordered_seqs.close()
fasta_out.close()
