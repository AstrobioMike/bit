#!/usr/bin/env python

from Bio import SeqIO
import sys
import argparse

parser = argparse.ArgumentParser(description = "This script takes a nucleotide multifasta and returns \
                                             a tab-delimited file with 3 columns: header, sequence length, \
                                             and GC. For version info, run `bit-version`.")

required = parser.add_argument_group('required arguments')

required.add_argument("-i", "--input-fasta", metavar = "<FILE>", help = "fasta file", action = "store", required = True)
parser.add_argument("-o", "--output-file", metavar = "<FILE>", help = 'Name of output tsv file (default: "GC-out.tsv")',
                    action = "store", default = "GC-out.tsv")

if len(sys.argv)==1:
    parser.print_help(sys.stderr)
    sys.exit(0)

args = parser.parse_args()

with open(args.input_fasta, "r") as in_fasta:

    with open(args.output_file, "w") as out_file:

        out_file.write("header" + "\t" + "length" + "\t" + "gc" + "\n")

        for cur_record in SeqIO.parse(in_fasta, "fasta"):
            gene_name = cur_record.name
            A_count = cur_record.seq.count('A')
            C_count = cur_record.seq.count('C')
            G_count = cur_record.seq.count('G')
            T_count = cur_record.seq.count('T')
            length = len(cur_record.seq)
            gc_percentage = float(G_count + C_count) / length
            gc_percentage = round(gc_percentage,2)
            out_file.write(str(gene_name)+"\t"+str(length)+"\t"+str(gc_percentage)+"\n")
